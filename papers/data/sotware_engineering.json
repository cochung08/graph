{"A case of computational thinking: The subtle effect of hidden dependencies on the\n user experience of version control":["Emma Soederberg"],"ARC++: Effective Typestate and Lifetime Dependency Analysis":["Franjo\n Ivancic"],"An Adaptable Rule Placement for Software Defined Networks":["Franjo Ivancic"],"Bespoke infrastructures":["Diomidis Spinellis"],"Generating Consistent Updates for Software-Defined Network Configurations":["Franjo Ivancic"],"Programmers’ Build Errors: A Case Study (at Google)":["Caitlin Sadowski","Edward Aftandilian","Robert Bowdidge"],"RLint: Reformatting R Code to Follow the Google Style Guide":["Alex Blocker","Jeffrey D. Oldham","Caitlin Sadowski"],"Securing the Tangled Web":[],"2nd international workshop on user evaluations for software engineering\n researchers (USER)":["Caitlin Sadowski"],"Accuracy of Contemporary Parametric Software Estimation Models: A Comparative\n Analysis":["Derya Toka"],"Applications and Extensions of Alloy: Past, Present, and Future":["Greg Dennis"],"Combining compile-time and run-time instrumentation for testing tools":["Timur Iskhodzhanov","Evgeniy Stepanov"],"Does Bug Prediction Support Human Developers? Findings from a Google Case Study":["Caitlin\n Sadowski"],"Generating Precise Dependencies for Large Software":["J. David Morgenthaler"],"Large-Scale Automated Refactoring Using ClangMR":["Hyrum Wright"],"Scalable, Example-Based Refactorings with Refaster":["Louis Wasserman"],"Strategies for testing client-server interactions in mobile applications":[],"Testable JavaScript":[],"A taste of Capsicum: practical capabilities for UNIX":["Ben\n Laurie"],"AddressSanitizer: A Fast Address Sanity Checker":["Konstantin Serebryany","Derek Bruening","Alexander Potapenko","Dmitry Vyukov"],"Building Useful Program Analysis Tools Using an Extensible Java Compiler":["Edward Aftandilian","Raluca Sauciuc"],"Measuring Enforcement Windows with Symbolic Trace Interpretation: What\n Well-Behaved Programs Say":["Amer\n Diwan"],"Searching for Build Debt: Experiences Managing Technical Debt at Google":["J. David Morgenthaler","Raluca Sauciuc","Sanjay Bhansali"],"Systematic Software Testing: The Korat Approach":["Chandrasekhar Boyapati"],"Team Geek: A Software Developer's Guide to Working Well with Others":["Brian W. Fitzpatrick","Ben Collins-Sussman"],"Building Web Apps for Google TV":["Andres Ferrate","Paul Carff"],"Combined Static and Dynamic Automated Test Generation":[],"Dynamic Race Detection with LLVM Compiler":["Konstantin Serebryany","Alexander Potapenko","Timur Iskhodzhanov","Dmitry Vyukov"],"Entrepreneurial Innovation at Google":["Patrick Copeland"],"HTAF: Hybrid Testing Automation Framework to Leverage Local and Global Computing\n Resources":["Keun Soo Yim"],"Practical Memory Checking with Dr. Memory":["Derek Bruening"],"RACEZ: A Lightweight and Non-Invasive Race Detection Tool for Production\n Applications":["Robert Hundt"],"Still All On One Server: Perforce at Scale":[],"The Future of Computing Performance: Game Over or Next Level?":["Luiz André Barroso"],"Apprenticeship Patterns: Guidance for the Aspiring Software Craftsman":[],"Evolving ASDF: More Cooperation, Less Coordination":["François-René Rideau"],"Google’s Innovation Factory: Testing, Culture, And Infrastructure":["Patrick Copeland"],"How Much Software Testing is Enough":[],"Object views: Fine-grained sharing in browsers":["Adrienne Felt","Mark S. Miller"],"Software development and crunch time; and more":[],"Performance Trade-offs Implementing Refactoring Support for Objective-C":["Robert Bowdidge"],"Programming Google App Engine":[],"ThreadSanitizer – data race detection in practice.":["Konstantin Serebryany","Timur Iskhodzhanov"],"Code Coverage, Performance, Approximation and Automatic Recognition of Idioms in\n Scientific Applications":[],"Dynamic Recognition of Synchronization Operations for Improved Data Race\n Detection":["Sriraman Tallam"],"Experiences Using Static Analysis to Find Bugs":["J. David\n Morgenthaler","John Penix"],"High Performance Web Sites":[],"Predicting Accurate and Actionable Static Analysis Warnings: An Experimental\n Approach":["John Penix","J. David Morgenthaler"],"Version Control with Subversion, Second Edition":["Brian Fitzpatrick","Ben Collins-Sussman"],"Evaluating Static Analysis Defect Warnings on Production Software":["J. David\n Morgenthaler","John Penix"],"Keeping the Web in Web 2.0: An HCI Approach to Designing Web Applications":["Joshua D. Mittleman"],"Parallel Test Generation and Execution with Korat":["Nemanja\n Petrovic"],"Project Intelligence":[],"Using FindBugs on Production Software":["J. David Morgenthaler","John Penix"],"A Fishbowl with Piranhas: Coalescence, Convergence, or Divergence? The Future of\n Agile Software Development Practices: Some Assembly Required!":[],"How to design a good API and why it matters":[],"LCSD: Library-Centric Software Design":[],"LEVER: A Tool for Learning Based Verification (Tool Paper)":[],"Modular Software Upgrades for Distributed Systems":["Sameer Ajmani"],"binpac: A yacc for Writing Application Protocol Parsers":["Ruoming Pang"],"Hancock: A language for analyzing transactional data streams":["Corinna Cortes","Daryl Pregibon"],"How to Break Software":[],"Jscheme: A Dialect of Scheme for Scripting in Java,":["Peter Norvig"]}